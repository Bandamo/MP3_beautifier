import requests
import base64
import urllib
from requests_html import HTMLSession
import bs4

image_url = ""
img = open("album/test.jpg",'wb')
img64=base64.b64decode(image_url)
img.write(img64)
img.close()

def main():
    album="La corrida"
    artiste="Francis Cabrel"
    url="https://www.bing.com/images/search?q="+urllib.parse.quote(artiste+" "+album)+"&form=HDRSC2&first=1&tsc=ImageHoverTitle"
    try:
        session = HTMLSession()
        headers = {"User-Agent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:105.0) Gecko/20100101 Firefox/105.0"} 
        response = session.get(url,headers=headers)

    except requests.exceptions.RequestException as e:
        exit()
    soup=bs4.BeautifulSoup(response.content,"html.parser")
    element = soup.find('li',attrs={'data-idx':'1'})
    image_url = element.find('img', attrs={'class':'mimg'})['src']

    #download image
    img_data = requests.get(image_url).content
    with open('album/image_name.jpg', 'wb') as handler:
        handler.write(img_data)



if __name__=='__main__':
    main()